#BlueJ class context
comment0.target=DiskGame
comment0.text=\r\n\ A\ game\ in\ which\ the\ player\ has\ to\ blow\ up\ disks\ spread\ out\ over\ a\ shooting\ range.\r\n\ The\ game\ starts\ with\ a\ collection\ of\ randomly\ placed\ small\ disks\ on\ the\ upper\ half\r\n\ of\ the\ graphics\ pane,\ and\ a\ gun\ at\ the\ bottom.\r\n\ The\ gun\ is\ fixed\ in\ the\ middle\ of\ a\ horizontal\ line\ below\ the\ shooting\ range,\ and\r\n\ shoots\ in\ any\ direction\ with\ an\ angle\ of\ 180\ degrees.\r\n\ The\ player\ fires\ the\ gun\ with\ the\ mouse,\ by\ releasing\ the\ mouse\ within\ the\ firing\ zone\r\n\ limited\ by\ an\ arc\ surrounding\ the\ upper\ part\ of\ the\ gun.\ That\ will\ give\ the\ direction\ of\ the\ shot.\r\n\ If\ a\ shot\ hits\ a\ disk,\ it\ will\ damage\ it.\r\n\ If\ the\ disk\ is\ damaged\ sufficiently,\ it\ will\ explode\ and\ maybe\ damage\ surrounding\ disks,\r\n\ if\ they\ are\ within\ range\ (Challenge).\r\n\ The\ player\ has\ a\ limited\ number\ of\ shots,\ and\ the\ goal\ is\ to\ cause\ the\ maximum\ damage.\r\n\ Each\ disk\ can\ report\ its\ score\ (based\ on\ how\ much\ damage\ it\ received\ -\ the\ greater\ the\ damage,\r\n\ the\ greater\ the\ score),\ and\ the\ score\ for\ the\ game\ is\ the\ sum\ of\ the\ scores\ for\ each\ disk.\ \ \r\n\ The\ game\ is\ over\ when\ either\ the\ player\ has\ run\ out\ of\ shots\ or\ all\ the\ disks\ have\ exploded.\r\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=\r\n\ Sets\ up\ the\ user\ interface\:\r\n\ Set\ up\ the\ buttons\ and\ the\ mouselistener\r\n
comment10.params=shotX\ shotY
comment10.target=Disk\ getHitDisk(double,\ double)
comment10.text=\r\n\ Does\ the\ given\ shot\ hit\ a\ disk?\ If\ yes,\ return\ that\ disk.\ Else\ return\ null\r\n\ Useful\ when\ firing\ a\ shot\r\n\ Hint\:\ use\ the\ isOn\ method\ of\ the\ Disk\ class\r\n
comment11.params=disk
comment11.target=void\ damageNeighbours(Disk)
comment11.text=\r\n\ Inflict\ damage\ on\ all\ the\ neighbours\ of\ the\ given\ disk\r\n\ (ie,\ all\ disks\ that\ are\ within\ range\ of\ the\ disk,\ and\ are\ not\ already\ broken)\r\n\ Note,\ it\ should\ not\ inflict\ more\ damage\ on\ the\ given\ disk.\r\n\ Useful\ when\ firing\ a\ shot\r\n\ Hint\:\ make\ use\ of\ Disk\ class\ methods\r\n\r\n\ For\ the\ CHALLENGE,\ this\ should\ be\ able\ to\ cause\ a\ chain\ reaction\ \r\n\ \ so\ that\ neighbours\ that\ are\ damaged\ to\ their\ limit\ will\ explode\ and\r\n\ \ damage\ their\ neighbours,\ ....\r\n
comment12.params=
comment12.target=boolean\ haveAllDisksExploded()
comment12.text=\r\n\ Are\ all\ the\ disks\ exploded?\r\n\ Useful\ for\ telling\ whether\ the\ game\ is\ over.\r\n
comment13.params=
comment13.target=boolean\ haveAllDisksExplodedCompletion()
comment13.text=\r\n\ Are\ all\ the\ disks\ exploded?\r\n\ Useful\ for\ telling\ whether\ the\ game\ is\ over.\r\n
comment14.params=
comment14.target=void\ updateScore()
comment14.text=\r\n\ Update\ the\ score\ field,\ by\ summing\ the\ scores\ of\ each\ disk\r\n\ Score\ is\ 150\ for\ exploded\ disks,\ 50\ for\ disks\ with\ 2\ hits,\ and\ 20\ for\ disks\ with\ 1\ hit.\r\n
comment15.params=
comment15.target=void\ updateScoreCompletion()
comment15.text=\r\n\ Update\ the\ score\ field,\ by\ summing\ the\ scores\ of\ each\ disk\r\n\ Score\ is\ 150\ for\ exploded\ disks,\ 50\ for\ disks\ with\ 2\ hits,\ and\ 20\ for\ disks\ with\ 1\ hit.\r\n
comment16.params=
comment16.target=void\ redraw()
comment16.text=\r\n\ \ Redraws\ the\ game\:\r\n\ \ -\ the\ boundary\ of\ the\ shooting\ range\ (done\ for\ you)\r\n\ \ -\ the\ shooting\ zone\ in\ gray\ (done\ for\ you)\r\n\ \ -\ the\ gun\ in\ black\ (done\ for\ you)\r\n\ \ -\ the\ disks\r\n\ \ -\ the\ pile\ of\ remaining\ shot\ (Completion)\r\n\ \r\n
comment17.params=
comment17.target=void\ saveGame()
comment17.text=\r\n\ Ask\ the\ user\ to\ select\ a\ file\ and\ save\ the\ current\ game\ to\ the\ selected\ file\r\n\ You\ need\ to\ save\:\r\n\ -\ The\ current\ score\ and\ the\ number\ of\ remaining\ shots\r\n\ -\ The\ coordinates\ and\ the\ damage\ of\ each\ disk\r\n\ \ \ Hint\:\ use\ the\ toString\ method\r\n
comment18.params=args
comment18.target=void\ main(java.lang.String[])
comment2.params=value
comment2.target=void\ setNumDisks(double)
comment2.text=\r\n\ Set\ the\ number\ of\ disks\ for\ the\ next\ game\r\n\ Hint\:\ Remember\ to\ cast\ to\ an\ int\r\n
comment3.params=value
comment3.target=void\ setNumShots(double)
comment3.text=\r\n\ Set\ the\ number\ of\ shots\ for\ the\ next\ game\r\n\ Hint\:\ Remember\ to\ cast\ to\ an\ int\r\n
comment4.params=
comment4.target=void\ startGame()
comment4.text=\r\n\ Set\ the\ fields\ of\ the\ game\ to\ their\ initial\ values,\r\n\ Create\ a\ new\ list\ of\ disks\r\n\ redraw\ the\ game\r\n
comment5.params=
comment5.target=void\ initialiseDisks()
comment5.text=\r\n\ Make\ a\ new\ ArrayList\ of\ disks\ with\ new\ disks\ at\ random\ positions\r\n\ within\ the\ shooting\ range.\r\n\ Remember\ to\ use\ the\ CONSTANTS\r\n\ Completion\:\ ensure\ than\ none\ of\ them\ are\ overlapping.\r\n
comment6.params=action\ x\ y
comment6.target=void\ doMouse(java.lang.String,\ double,\ double)
comment6.text=\r\n\ Respond\ to\ the\ mouse\r\n
comment7.params=x\ y
comment7.target=boolean\ isWithinFiringZone(double,\ double)
comment7.text=\r\n\ Is\ the\ given\ position\ within\ the\ firing\ zone\r\n
comment8.params=x\ y
comment8.target=void\ fireShot(double,\ double)
comment8.text=\r\n\ The\ core\ mechanic\ of\ the\ game\ is\ to\ fire\ a\ shot.\r\n\ -\ Update\ the\ number\ of\ shots\ remaining.\r\n\ -\ Move\ the\ shot\ up\ the\ screen\ in\ the\ correct\ direction\ from\ the\ gun,\ step\ by\ step,\ until\ \r\n\ \ \ it\ either\ goes\ off\ the\ screen\ or\ hits\ a\ disk.\r\n\ \ \ The\ shot\ is\ constantly\ redrawn\ as\ a\ line\ from\ the\ gun\ to\ its\ current\ position.\r\n\ -\ If\ the\ shot\ hits\ a\ disk,\r\n\ \ \ -\ it\ damages\ the\ disk,\ \r\n\ \ \ -\ If\ the\ disk\ is\ now\ broken,\ then\r\n\ \ \ \ \ it\ will\ damage\ its\ neighbours\r\n\ \ \ \ \ (ie,\ all\ the\ other\ disks\ within\ range\ will\ be\ damaged\ also)\r\n\ \ \ -\ it\ exits\ the\ loop.\r\n\ -\ Redraw\ the\ game\r\n\ -\ Finally,\ update\ the\ score,\r\n\ -\ If\ the\ game\ is\ now\ over,\ \ print\ out\ the\ score\ \r\n\ (You\ should\ define\ additional\ methods\ -\ don't\ do\ it\ all\ in\ one\ big\ method\!)\r\n
comment9.params=x\ y
comment9.target=boolean\ isShotOffScreen(double,\ double)
comment9.text=\r\n\ Is\ the\ shot\ out\ of\ the\ screen\r\n
numComments=19
